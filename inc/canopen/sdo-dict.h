#ifndef CANOPEN_SDO_DICT_H_
#define CANOPEN_SDO_DICT_H_

#include "canopen/types.h"
#include <stdint.h>

#define SDO_MUX(index, subindex) ((index << 16) | subindex)

#define SDO_DICTIONARY \
	X(0x1000, 0, UNSIGNED32, DEVICE_TYPE) \
	X(0x1001, 0, UNSIGNED8, ERROR_REGISTER) \
	X(0x1002, 0, UNSIGNED32, MANUFACTURER_STATUS_REGISTER) \
	X(0x1003, 0, UNSIGNED32, PREDEFINED_ERROR_FIELD_COUNT) \
	X(0x1005, 0, UNSIGNED32, SYNC_COB_ID) \
	X(0x1006, 0, UNSIGNED32, COMMUNICATION_CYCLE_PERIOD) \
	X(0x1007, 0, UNSIGNED32, SYNCHRONOUS_WINDOW_LENGTH) \
	X(0x1008, 0, VISIBLE_STRING, MANUFACTURER_DEVICE_NAME) \
	X(0x1009, 0, VISIBLE_STRING, MANUFACTURER_HARDWARE_VERSION) \
	X(0x100A, 0, VISIBLE_STRING, MANUFACTURER_SOFTWARE_VERSION) \
	X(0x100C, 0, UNSIGNED16, GUARD_TIME) \
	X(0x100D, 0, UNSIGNED8, LIFE_TIME_FACTOR) \
	X(0x1010, 0, UNSIGNED32, STORE_PARAMETERS) \
	X(0x1011, 0, UNSIGNED32, RESTORE_DEFAULT_PARAMETERS) \
	X(0x1012, 0, UNSIGNED32, TIME_COB_ID) \
	X(0x1013, 0, UNSIGNED32, HIGH_RESULUTION_TIME_STAMP) \
	X(0x1014, 0, UNSIGNED32, EMERGENCY_COB_ID) \
	X(0x1015, 0, UNSIGNED16, EMERGENCY_INHIBIT_TIME) \
	X(0x1016, 0, UNSIGNED32, CONSUMER_HEARTBEAT_TIME) \
	X(0x1017, 0, UNSIGNED16, PRODUCER_HEARTBEAT_TIME) \
	X(0x1018, 0, UNSIGNED8, IDENTITY_COUNT) \
	X(0x1018, 1, UNSIGNED32, VENDOR_ID) \
	X(0x1018, 2, UNSIGNED32, PRODUCT_CODE) \
	X(0x1018, 3, UNSIGNED32, REVISION_NUMBER) \
	X(0x1020, 0, UNSIGNED32, VERIFY_CONFIGURATION) \
	X(0x1021, 0, DOMAIN, STORE_EDS) \
	X(0x1022, 0, UNSIGNED16, STORAGE_FORMAT)

enum {
#define X(index, subindex, type, name) dict_ ## name = SDO_MUX(index, subindex),
	DICTIONARY
#undef X
};

enum canopen_type sdo_dict_type(uint32_t mux);
const char* sdo_dict_tostring(uint32_t mux);
uint32_t sdo_dict_fromstring(const char* str);

#endif /* CANOPEN_SDO_DICT_H_ */
